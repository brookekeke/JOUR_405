summer_crime_averages <- pg_crime_averages %>%
mutate(
june_change = (Jun - average_incidents) / average_incidents) * 100
summer_crime_averages <- pg_crime_averages %>%
mutate(
june_change = ((Jun - average_incidents) / average_incidents) * 100
july_change = ((Jul - average_incidents) / average_incidents) * 100
summer_crime_averages <- pg_crime_averages %>%
mutate(
june_change = ((Jun - average_incidents) / average_incidents) * 100,
july_change = ((Jul - average_incidents) / average_incidents) * 100,
august_change = ((Aug - average_incidents) / average_incidents) * 100
)
View(summer_crime_averages)
View(summer_crime_averages)
View(pg_crime)
View(pg_crime_averages)
View(pg_crime_averages)
View(pg_crime_averages)
View(pg_crime_averages)
View(summer_crime_averages)
View(summer_crime_averages)
summer_crime_averages <- pg_crime_averages |>
mutate(
june_change = ((Jun - average_incidents) / average_incidents) * 100,
july_change = ((Jul - average_incidents) / average_incidents) * 100,
august_change = ((Aug - average_incidents) / average_incidents) * 100
)
summer_crime_averages <- pg_crime_averages %>%
mutate(
june_change = ((Jun - average_incidents) / average_incidents) * 100,
july_change = ((Jul - average_incidents) / average_incidents) * 100,
august_change = ((Aug - average_incidents) / average_incidents) * 100
)
summer_crime_averages <- pg_crime_averages %>%
mutate(
june_change = ((Jun - average_incidents) / average_incidents) * 100,
july_change = ((Jul - average_incidents) / average_incidents) * 100,
august_change = ((Aug - average_incidents) / average_incidents) * 100
)
pg_crime_averages <- pg_crime %>%
group_by(category) %>%
mutate(
total_incidents = sum(Jan + Feb + Mar + Apr + May + Jun + Jul + Aug + Sep + Oct + Nov + Dec),
average_incidents = mean(Jan + Feb + Mar + Apr + May + Jun + Jul + Aug + Sep + Oct + Nov + Dec))
summer_crime_averages <- pg_crime_averages %>%
mutate(
june_change = (Jun - average_incidents) / average_incidents) * 100,
library(tidyverse)
install.packages("janitor")
library(janitor)
crimes <- read_csv("https://raw.githubusercontent.com/dwillis/jour405/refs/heads/main/data/biden_wh_salaries_2024.csv") |> clean_names()
wh_salaries <- read_csv("https://raw.githubusercontent.com/dwillis/jour405/refs/heads/main/data/biden_wh_salaries_2024.csv") |> clean_names()
View(wh_salaries)
wh_salaries <- read_csv("https://raw.githubusercontent.com/dwillis/jour405/refs/heads/main/data/biden_wh_salaries_2024.csv") |>
wh_salaries <- read_csv("https://raw.githubusercontent.com/dwillis/jour405/refs/heads/main/data/biden_wh_salaries_2024.csv")
View(wh_salaries)
View(wh_salaries)
View(summer_crime_averages)
View(wh_salaries)
View(wh_salaries)
View(wh_salaries)
summarize(mean_wh_salaries = mean(salary),
median_wh_salaries = median(salary),
)
wh_salaries |>
summarize(mean_wh_salaries = mean(salary),
median_wh_salaries = median(salary),
)
wh_salaries |>
summarize(mean_wh_salaries = mean(salary),
median_wh_salaries = median(salary),
max_wh_salaries = max(salary),
min_wh_salaries = min(salary)
)
library(tidyverse)
install.packages("janitor")
library(janitor)
md_cities <- read_csv("https://raw.githubusercontent.com/dwillis/jour405/refs/heads/main/data/md_cities_crime_2019_2020.csv")
crimes |> mutate(total_rate = grand_total/population * 10000)
crimes |> mutate(violent_rate_2019 = grand_total/population * 10000)
View(md_cities)
View(md_cities)
md_cities_rate |> (mutate
violent_rate_2019 = (violent_2019 / population_2019) x 1000
md_cities_rate %/% (mutate
violent_rate_2019 = (violent_2019 / population_2019) x 1000
md_cities_rate |> (mutate
violent_rate_2019 = (total_violent_2019 / population_2019) * 1000
md_cities_rate |> mutate (
violent_rate_2019 = (total_violent_2019 / population_2019) * 1000
property_rate_2019 = (total_property_2019 / population_2019) * 1000
md_cities_rate |> mutate (
violent_rate_2019 = (violent_2019 / pop_2019) * 1000
property_rate_2019 = (property_2019 / pop_2019) * 1000
md_cities_rate |> mutate (
violent_rate_2019 = (violent2019 / pop2019) * 1000
property_rate_2019 = (property2019 / pop2019) * 1000
md_cities_rate <- md_cities |> mutate (
violent_rate_2019 = (violent2019 / pop2019) * 1000
property_rate_2019 = (property2019 / pop2019) * 1000
md_cities_rate <- md_cities |> mutate (
violent_rate_2019 = (violent_total / pop2019) * 1000
property_rate_2019 = (property_total / pop2019) * 1000
md_cities_rate <- md_cities |> mutate (
violent_rate_2019 = (violent_total / pop2019) * 1000
property_rate_2019 = (property_total / pop2019) * 1000
md_cities_rate <- md_cities |> mutate (
violent_rate_2019 = (violent_total / population_2019) * 1000
property_rate_2019 = (property_total / population_2019) * 1000
md_cities_rate <- md_cities |> mutate (
violent_rate_2019 = (violent_total_2019 / population_2019) * 1000
property_rate_2019 = (property_total_2019 / population_2019) * 1000
View(md_cities)
View(md_cities)
View(crimes)
View(crimes)
View(pg_crime)
View(pg_crime)
md_cities_rate <- md_cities |> mutate (
violent_rate_2019 = (violent2019_total / population_2019) * 1000
property_rate_2019 = (property2019_total / population_2019) * 1000
md_cities_rate <- md_cities |> mutate (
violent_rate_2019 = (violent2019_total / population_2019) * 1000
property_rate_2019 = (property2019_total / population_2019) * 1000
md_cities_rate <- md_cities |> mutate (
violent_rate_2019 = (violent2019_total / population_2019) * 1000,
property_rate_2019 = (property2019_total / population_2019) * 1000,
violent_rate_2020 = (violent2020_total / population_2020) * 1000,
property_rate_2020 = (property2020_total / population_2020) * 1000
)
rlang::last_trace()
rlang::last_trace()
rlang::last_trace()
rlang::last_trace()
md_cities_rate <- md_cities |> mutate (
violent_rate_2019 = (violent2019_total / population_2019) * 1000,
property_rate_2019 = (property2019_total / population_2019) * 1000,
violent_rate_2020 = (violent2020_total / population_2020) * 1000,
property_rate_2020 = (property2020_total / population_2020) * 1000
rlang::last_trace()
md_cities_rate <- md_cities |> mutate (
violent_rate_2019 = (violent2019_total / population_2019) * 1000,
property_rate_2019 = (property2019_total / population_2019) * 1000,
violent_rate_2020 = (violent2020_total / population_2020) * 1000,
property_rate_2020 = (property2020_total / population_2020) * 1000
)
md_cities_rate <- md_cities |> mutate (
violent_rate_2019 = (violent2019_total / pop2019) * 1000,
property_rate_2019 = (property2019_total / pop2019) * 1000,
violent_rate_2020 = (violent2020_total / pop2020) * 1000,
property_rate_2020 = (property2020_total / pop2020) * 1000
)
md_cities_rate <- md_cities |> mutate (
violent_rate_2019 = violent2019_total / pop2019 * 1000,
property_rate_2019 = property2019_total / pop2019 * 1000,
violent_rate_2020 = violent2020_total / pop2020 * 1000,
property_rate_2020 = property2020_total / pop2020 * 1000
)
md_cities_rate <- md_cities |> mutate (
violent_rate_2019 = violent2019 / pop2019 * 1000,
property_rate_2019 = property2019 / pop2019 * 1000,
violent_rate_2020 = violent2020 / pop2020 * 1000,
property_rate_2020 = property2020 / pop2020 * 1000
)
md_cities_rate <- md_cities |> mutate (
violent_rate_2019 = violent2019 / pop2019 * 1000,
property_rate_2019 = property2019 / pop2019 * 1000,
violent_rate_2020 = violent2020 / pop2020 * 1000,
property_rate_2020 = property2020/ pop2020 * 1000
)
View(md_cities_rate)
View(md_cities_rate)
md_cities_rate <- md_cities |> mutate (
violent_change = (violent_rate_2020 - violent_rate_2019) / violent_rate_2019,
property_change = (property_rate_2020 - property_rate_2019) / property_rate_2019
)
md_cities_rate <- md_cities_rate |> mutate (
violent_change = (violent_rate_2020 - violent_rate_2019) / violent_rate_2019,
property_change = (property_rate_2020 - property_rate_2019) / property_rate_2019
)
View(md_cities_rate)
View(md_cities_rate)
md_cities_rate <- md_cities_rate |> mutate (
violent_change = (violent_rate_2020 - violent_rate_2019) / violent_rate_2019,
property_change = (property_rate_2020 - property_rate_2019) / property_rate_2019
)
View(md_cities_rate)
md_cities_rate <- md_cities_rate |> mutate (
violent_change = (violent_rate_2020 - violent_rate_2019) / violent_rate_2019,
property_change = (property_rate_2020 - property_rate_2019) / property_rate_2019
)
md_cities_change <- md_cities_rate |> mutate (
violent_change = (violent_rate_2020 - violent_rate_2019) / violent_rate_2019,
property_change = (property_rate_2020 - property_rate_2019) / property_rate_2019
)
View(md_cities_change)
View(md_cities_change)
md_cities_change <- md_cities_rate |> mutate (
violent_change = (violent_rate_2020 - violent_rate_2019) / violent_rate_2019,
property_change = (property_rate_2020 - property_rate_2019) / property_rate_2019
)
View(md_cities_rate)
View(md_cities_rate)
md_cities_percentiles |> mutate(percentile = ntile(violent_rate_2020, 100))
md_cities_percentiles <- md_cities %>% mutate(percentile = ntile(violent_rate_2020, 100))
md_cities_percentiles <- md_cities |> mutate(percentile = ntile(violent_rate_2020, 100))
md_cities_percentiles <- md_cities |>
mutate(percentile = ntile(violent_rate_2020, 100))
library(dplyr)
md_cities_percentiles <- md_cities |>
mutate(percentile = ntile(violent_rate_2020, 100))
md_cities <- md_cities_percentiles |>
mutate(percentile = ntile(violent_rate_2020, 100))
md_cities_percentiles <- md_cities |>
mutate(percentile = ntile(violent_rate_2020, 100))
md_cities_rate <- md_cities |> mutate (
violent_rate_2019 = violent2019 / pop2019 * 1000,
property_rate_2019 = property2019 / pop2019 * 1000,
violent_rate_2020 = violent2020 / pop2020 * 1000,
property_rate_2020 = property2020/ pop2020 * 1000
)
md_cities_percentiles <- md_cities |>
mutate(percentile = ntile(violent_rate_2020, 100))
md_cities_percentiles |> mutate(percentile = ntile(violent_rate_2020, 100))
md_cities_percentiles <- md_cities |> mutate(percentile = ntile(violent_rate_2020, 100))
md_cities_percentiles <- md_cities |> mutate(percentile = ntile(violent2020_2020, 100))
md_cities_percentiles <- md_cities |> mutate(percentile = ntile(violent2020, 100))
md_cities_percentiles <- md_cities |> mutate(percentile = ntile(violent2020, 100))
View(md_cities_percentiles)
View(md_cities_percentiles)
library(tidyverse)
install.packages("janitor")
library(janitor)
md_cities <- read_csv("https://raw.githubusercontent.com/dwillis/jour405/refs/heads/main/data/md_cities_crime_2019_2020.csv")
md_cities_rate <- md_cities |> mutate (
violent_rate_2019 = violent2019 / pop2019 * 1000,
property_rate_2019 = property2019 / pop2019 * 1000,
violent_rate_2020 = violent2020 / pop2020 * 1000,
property_rate_2020 = property2020/ pop2020 * 1000
)
md_cities_change <- md_cities_rate |> mutate (
violent_change = (violent_rate_2020 - violent_rate_2019) / violent_rate_2019,
property_change = (property_rate_2020 - property_rate_2019) / property_rate_2019
)
md_cities_percentiles <- md_cities |> mutate(percentile = ntile(violent2020, 100))
md_cities |> summarize(IQR_violent2020 = IQR(violent2020))
md_cities |>
summarize(IQR_violent2020 = IQR(violent2020, na.rm = TRUE))
na.rm = TRUE))
md_cities |>
summarize(IQR_violent2020 = IQR(violent2020, na.rm = TRUE))
md_cities |>
summarize(IQR_violent2020 = IQR(violent2020))
md_cities_change <- md_cities_rates |>
mutate(violent_change = ((violent_rate_2020 - violent_rate_2019) / violent_rate_2019) * 100,
property_change = ((property_rate_2020 - property_rate_2019) / property_rate_2019) * 100)
md_cities_change <- md_cities_rate |>
mutate(violent_change = ((violent_rate_2020 - violent_rate_2019) / violent_rate_2019) * 100,
property_change = ((property_rate_2020 - property_rate_2019) / property_rate_2019) * 100)
md_cities_rates <- md_cities |>
mutate(violent_rate_2019 = (violent2019 / pop2019) * 1000,
property_rate_2019 = (property2019 / pop2019) *1000,
violent_rate_2020 = (violent2020 / pop2020) * 1000,
property_rate_2020 = (property2020 / pop2020) *1000)
library(tidyverse)
read_csv("https://raw.githubusercontent.com/dwillis/jour405/refs/heads/main/data/spotify_2020.csv")
danceability |> summarize(mean = mean(count), sd = sd(count))
summarize(mean = mean(count), sd = sd(count))
danceability |> summarise(mean = mean(count), sd = sd(count))
summarise(mean = mean(count), sd = sd(count))
spotify_songs |> summarize(mean = mean(count), sd = sd(count))
spotify_songs |> read_csv("https://raw.githubusercontent.com/dwillis/jour405/refs/heads/main/data/spotify_2020.csv")
spotify_songs <- read_csv("https://raw.githubusercontent.com/dwillis/jour405/refs/heads/main/data/spotify_2020.csv")
spotify_songs |> summarize(mean = mean(count), sd = sd(count))
spotify_songs |> mean (spotify_songs), sd(spotify_songs))
spotify_songs |>  summarize(mean_danceability = mean(danceability), sd_danceability = sd(danceability))
View(spotify_songs)
View(spotify_songs)
spotify_songs |>
ggplot() +
geom_histogram(aes(x = count), binwidth = 2)
dancibility |>
ggplot() +
geom_histogram(aes(x = count), binwidth = 2)
spotify_songs |>
ggplot() +
geom_histogram(dancibility(x = count), binwidth = 2)
spotify_songs |>
ggplot() +
geom_histogram(aes(x = count), binwidth = 2)
car_thefts |>
ggplot() +
geom_histogram(aes(x = danceability), binwidth = 2)
spotify_songs |>
ggplot() +
geom_histogram(aes(x = danceability), binwidth = 2)
spotify_songs |>
ggplot() +
geom_histogram(aes(x = danceability), binwidth = .5)
spotify_songs |>
ggplot() +
geom_histogram(aes(x = danceability), binwidth = .2)
spotify_songs |>
ggplot() +
geom_histogram(aes(x = danceability), binwidth = .05)
spotify_songs |>
ggplot() +
geom_histogram(aes(x = danceability), binwidth = .1)
spotify_songs |>
ggplot() +
geom_histogram(aes(x = danceability), binwidth = .05)
spotify_songs |>
ggplot() +
geom_histogram(aes(x = danceability), binwidth = .05)
geom_vline(aes(xintercept = mean(count)), color = "red", linetype = "dashed", size = 1)
spotify_songs |>
ggplot() +
geom_histogram(aes(x = danceability), binwidth = .05)
geom_vline(aes(xintercept = mean(danceability)), color = "red", linetype = "dashed", size = 1)
spotify_songs |>
ggplot() +
geom_histogram(aes(x = danceability), binwidth = .05)
geom_vline(aes(x = mean(danceability)), color = "red", linetype = "dashed", size = 1)
spotify_songs |>
ggplot() +
geom_histogram(aes(x = danceability), binwidth = .05)
geom_vline(aes(xintercept = mean(count)), color = "red", linetype = "dashed", size = 1)
geom_vline(aes(xintercept = mean(count) - sd(count)), color = "blue", linetype = "dashed", size = 1) +
spotify_songs |>
ggplot() +
geom_histogram(aes(x = danceability), binwidth = .05)
geom_vline(aes(xintercept = mean(count)), color = "red", linetype = "dashed", size = 1)
geom_vline(aes(xintercept = mean(count) - sd(count)), color = "blue", linetype = "dashed", size = 1)
spotify_songs |>
ggplot() +
geom_histogram(aes(x = danceability), binwidth = .05)
geom_vline(aes(xintercept = mean(count)), color = "red", linetype = "dashed", size = .5)
geom_vline(aes(xintercept = mean(count) - sd(count)), color = "blue", linetype = "dashed", size = .5)
spotify_songs |>
ggplot() +
geom_histogram(aes(x = danceability), binwidth = .1)
geom_vline(aes(xintercept = mean(count)), color = "red", linetype = "dashed", size = .5)
spotify_songs |>
ggplot() +
geom_histogram(aes(x = danceability), binwidth = .1)
geom_vline(aes(xintercept = mean(count)), color = "red", linetype = "dashed", size = 1)
spotify_songs |>
ggplot() +
geom_histogram(aes(x = danceability), binwidth = .1)
geom_histogram(aes(x = danceability), binwidth = 0.05, color = "red", linetype = "dashed", size = 1)
spotify_songs |>
ggplot() +
geom_histogram(aes(x = danceability), binwidth = .1)
geom_histogram(aes(x = danceability), binwidth = 2, color = "red", linetype = "dashed", size = 1)
spotify_songs |>
ggplot() +
geom_histogram(aes(x = danceability), binwidth = .1)
geom_histogram(aes(x = danceability), binwidth = 1, color = "red", linetype = "dashed", size = 1)
spotify_songs |>
ggplot() +
geom_histogram(aes(x = danceability), binwidth = .1)
geom_histogram(aes(x = danceability), binwidth = .1, color = "red", linetype = "dashed", size = 1)
spotify_songs |>
ggplot() +
geom_histogram(aes(x = danceability), binwidth = .5)
geom_histogram(aes(x = danceability), binwidth = .1, color = "red", linetype = "dashed", size = 1)
spotify_songs |>
ggplot() +
geom_histogram(aes(x = danceability), binwidth = .05)
geom_histogram(aes(x = danceability), binwidth = .1, color = "red", linetype = "dashed", size = 1)
spotify_songs |>
ggplot() +
geom_histogram(aes(x = danceability), binwidth = .1)
geom_vline(aes(xintercept = mean_danceability(danceability)), color = "red", linetype = "dashed", size = 1)
spotify_songs |>
ggplot() +
geom_histogram(aes(x = danceability), binwidth = .1)
geom_vline(aes(xintercept = mean_danceability(count)), color = "red", linetype = "dashed", size = 1)
spotify_songs |>
ggplot() +
geom_histogram(aes(x = danceability), binwidth = 0.1) +
geom_vline(aes(xintercept = mean_danceability(danceability)), color = "red", linetype = "dashed", size = 1)
spotify_songs |>
ggplot() +
geom_histogram(aes(x = danceability), binwidth = 0.1) +
geom_vline(aes(xintercept = mean(danceability)), color = "red", linetype = "dashed", size = 1)
library(tidyverse)
library(dlpyr)
spotify_songs |>
ggplot() +
geom_histogram(aes(x = danceability), binwidth = 0.1) +
geom_vline(aes(xintercept = mean(danceability)), color = "red", linetype = "dashed", size = 1)
spotify_songs |>
ggplot() +
geom_histogram(aes(x = danceability), binwidth = 0.1) +
geom_vline(aes(xintercept = mean(danceability)), color = "red", linetype = "dashed", size = 1)
geom_vline(aes(xintercept = mean(danceability) - sd(danceability)), color = "blue", linetype = "dashed", size = 1) +
geom_vline(aes(xintercept = mean(danceability) + sd(danceability)), color = "blue", linetype = "dashed", size = 1)
spotify_songs |>
ggplot() +
geom_histogram(aes(x = danceability), binwidth = 0.1) +
geom_vline(aes(xintercept = mean(danceability)), color = "red", linetype = "dashed", size = 1) +
geom_vline(aes(xintercept = mean(danceability) - sd(danceability)), color = "blue", linetype = "dashed", size = 1) +
geom_vline(aes(xintercept = mean(danceability) + sd(danceability)), color = "blue", linetype = "dashed", size = 1)
spotify_songs |>
ggplot() +
geom_histogram(aes(x = danceability), binwidth = .1)
library(tidyverse)
library(dlpyr)
library(tidyverse)
library(dplyr)
M&Ms <- read_csv("https://raw.githubusercontent.com/dwillis/jour405/refs/heads/main/data/biden_wh_salaries_2024.csv")```
MMs <- read_csv("https://raw.githubusercontent.com/dwillis/jour405/refs/heads/main/data/biden_wh_salaries_2024.csv")```
Candy_data <- read_csv("https://raw.githubusercontent.com/dwillis/jour405/refs/heads/main/data/biden_wh_salaries_2024.csv")```
M&Ms <- read_csv("https://raw.githubusercontent.com/dwillis/jour405/refs/heads/main/data/biden_wh_salaries_2024.csv")
M&Ms <- read_csv("https://raw.githubusercontent.com/dwillis/jour405/refs/heads/main/data/biden_wh_salaries_2024.csv")
M&Ms <- read_csv("https://raw.githubusercontent.com/dwillis/jour405/refs/heads/main/data/biden_wh_salaries_2024.csv")
mandms <- read_csv("https://raw.githubusercontent.com/dwillis/jour405/refs/heads/main/data/mandms.csv")
read_csv("https://raw.githubusercontent.com/dwillis/jour405/refs/heads/main/data/mandms.csv")
library(tidyverse)
library(dlpyr)
library(tidyverse)
library(dlypr)
library(tidyverse)
library(dyplr)
library(tidyverse)
install(dlypr)
library(tidyverse)
library(dplyr)
read_csv("https://raw.githubusercontent.com/dwillis/jour405/refs/heads/main/data/mandms.csv")
m&ms <- read_csv("https://raw.githubusercontent.com/dwillis/jour405/refs/heads/main/data/mandms.csv")
MANDMS <- read_csv("https://raw.githubusercontent.com/dwillis/jour405/refs/heads/main/data/mandms.csv")
View(MANDMS)
View(MANDMS)
MandMs <- read_csv("https://raw.githubusercontent.com/dwillis/jour405/refs/heads/main/data/mandms.csv")
View(MandMs)
View(MandMs)
set.seed(42)
sample5 <- tibble(
color = sample(5, replace = TRUE)
)
head(sample5)
set.seed(42)
sample5 <- tibble(
number = sample(5, replace = TRUE)
)
head(sample5)
set.seed(42)
sample5 <- MandMs()
set.seed(1234)
sample5 <- MandMs()
set.seed(1234)
sample5 <- MandMs(
sample_n(5)
)
set.seed(1234)
sample5 <- MandMs %>%
sample_n(5)
set.seed(1234)
sample5 <- MandMs %>%
sample_n(5)
View(MandMs)
View(MandMs)
set.seed(1234)
sample5 <- tibble(
number = sample(5, replace = TRUE)
)
View(sample5)
View(sample5)
set.seed(1234)
sample5 <- tibble(
number = sample(5, replace = TRUE)
) +
set.seed(1234)
sample10 <- tibble(
number = sample(10, replace = TRUE)
)
View(sample5)
View(sample10)
View(sample5)
set.seed(1234)
sample5 <- tibble(
number = sample(5, replace = TRUE)
)
set.seed(1234)
sample10 <- tibble(
number = sample(10, replace = TRUE)
)
View(sample5)
sample_5 <-MandMs |>
sample_n(5)
sample_10 <-MandMs |>
sample_n(10)
View(sample_5)
sample_5 <-MandMs |>
sample_n(5)
sample_10 <-MandMs |>
sample_n(10)
View(spotify_songs)
View(sample5)
View(sample10)
View(sample_10)
View(sample_5)
View(sample_10)
View(sample_10)
sample_5 |> summarize(mean = mean(red), median = median(red), sd = sd(red))
sample_10 |> summarize(mean = mean(red), median = median(red), sd = sd(red))
MandMs |> summarize(mean = mean(MandMs), median = median(MandMs), sd = sd(MandMs))
MandMs |> summarize(mean = mean(total), median = median(total), sd = sd(total))
total |> summarize(mean = mean(total), median = median(total), sd = sd(total))
MandMs |> summarize(mean = mean(total), median = median(total), sd = sd(total))
